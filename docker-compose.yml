version: '3.9'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana 

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /:/rootfs:ro,rslave
    networks:
      - monitoring

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    restart: always
    networks:
      - monitoring
    expose:
      - "5000"
      - "8001"
    labels:
      - "prometheus_job=api"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100M"
        reservations:
          cpus: "0.5"
          memory: "100M"

  simulator:
    build:
      context: ./simulator
      dockerfile: Dockerfile
    container_name: simulator
    restart: always
    networks:
      - monitoring
    environment:
      - API_ENDPOINT=http://api:5000
    expose:
      - "8080"
      - "8000"
    labels:
      - "prometheus_job=simulator"

  receiver:
    build:
      context: ./receiver
      dockerfile: Dockerfile
    container_name: receiver
    restart: always
    expose:
      - "5001"
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-data: